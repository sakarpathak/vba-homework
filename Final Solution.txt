Sub stockanalysis():
    For Each ws In Worksheets
    
    'Variable Definition
    Dim total_volume As Double
    Dim ticker As String
    Dim row_ref As Long
    Dim lastrow As Long
    Dim year_open As Double
    Dim year_close As Double
    Dim yearly_change As Double
    Dim percentage_change As Single
    Dim greatest_volume As Double
    Dim greatest_increase As Long
    Dim greatest_decrease As Long
    Dim greatest_increase_ticker As String
    Dim greatest_decrease_ticker As String
    Dim greatest_volume_ticker As String
    
        'Initital Variable Setting
        WorksheetName = ws.Name
        lastrow = ws.Cells(Rows.Count, 1).End(xlUp).Row
        row_ref = 2
        total_volume = 0
        year_open = ws.Cells(2, 3).Value
        greatest_volume = 0
        greatest_increase = 0
        greatest_decrease = 0

        'adding headers across all the worksheets
        ws.Cells(1, 9).Value = "Ticker"
        ws.Cells(1, 10).Value = "Yearly Change"
        ws.Cells(1, 11).Value = "Percentage Change"
        ws.Cells(1, 12).Value = "Total Stock Volume"
        ws.Cells(2, 14).Value = "Greatest % Increase"
        ws.Cells(3, 14).Value = "Greatest % Decrease"
        ws.Cells(4, 14).Value = "Greatest Total Volume"
        ws.Cells(1, 15).Value = "Ticker"
        ws.Cells(1, 16).Value = "Value"
        
        'iteration through all rows
        For i = 2 To lastrow
            If ws.Cells(i + 1, 1).Value <> ws.Cells(i, 1).Value Then
                ticker = ws.Cells(i, 1).Value
                total_volume = total_volume + ws.Cells(i, 7).Value
                year_close = ws.Cells(i, 6).Value
                yearly_change = year_close - year_open
                
                'Some yearopen value is zero. So, i have inserted if statement to avoid division by zero.
                If year_open = 0 Then
                    percentage_change = 0
                Else
                    percentage_change = (yearly_change / year_open) * 100
                End If
                
                'assigning values to respective cells
                ws.Cells(row_ref, 9).Value = ticker
                ws.Cells(row_ref, 12).Value = total_volume
                ws.Cells(row_ref, 10).Value = yearly_change
                ws.Cells(row_ref, 11).Value = percentage_change
                
                    If ws.Cells(row_ref, 10).Value < 0 Then
                        ws.Cells(row_ref, 10).Interior.ColorIndex = 3
                    Else
                        ws.Cells(row_ref, 10).Interior.ColorIndex = 4
                    End If
                    
                year_open = ws.Cells(i + 1, 3).Value
                total_volume = 0
                row_ref = row_ref + 1
                
            Else
                total_volume = total_volume + ws.Cells(i, 7).Value
               
            End If
        Next i
        
        'Hard Solution
        For i = 2 To (row_ref - 1)
            If ws.Cells(i, 12).Value > greatest_volume Then
                greatest_volume = ws.Cells(i, 12).Value
                greatest_volume_ticker = ws.Cells(i, 9).Value
            Else
                greatest_volume = greatest_volume
                greatest_volume_ticker = greatest_volume_ticker
            End If

            If ws.Cells(i, 11).Value > 0 Then
                If ws.Cells(i, 11).Value > greatest_increase Then
                    greatest_increase = ws.Cells(i, 11).Value
                    greatest_increase_ticker = ws.Cells(i, 9).Value
                Else
                    greatest_increase = greatest_increase
                    greatest_increase_ticker = greatest_increase_ticker
                End If
                
            Else
                If ws.Cells(i, 11).Value < greatest_decrease Then
                    greatest_decrease = ws.Cells(i, 11).Value
                    greatest_decrease_ticker = ws.Cells(i, 9).Value
                Else
                    greatest_decrease = greatest_decrease
                    greatest_decrease_ticker = greatest_decrease_ticker
                End If
            End If
        Next i
        
        'Assigning the Greatest Values to respective cells
        ws.Cells(2, 15).Value = greatest_increase_ticker
        ws.Cells(3, 15).Value = greatest_decrease_ticker
        ws.Cells(4, 15).Value = greatest_volume_ticker
        ws.Cells(2, 16).Value = greatest_increase
        ws.Cells(3, 16).Value = greatest_decrease
        ws.Cells(4, 16).Value = greatest_volume
        
    Next ws
End Sub





